Future Works – Adding More High-Tech Content Sources
1️⃣ Blogs
Add RSS feeds or API links from leading tech companies & research groups:

Google AI Blog – https://ai.googleblog.com/

Microsoft Research Blog – https://www.microsoft.com/en-us/research/blog/

Meta AI Blog – https://ai.meta.com/blog/

Amazon Science Blog – https://www.amazon.science/blog

NVIDIA Technical Blog – https://developer.nvidia.com/blog/

IBM Research Blog – https://research.ibm.com/blog

OpenAI Blog – https://openai.com/blog

DeepMind Blog – https://deepmind.google/discover/blog/

MIT Technology Review (Paid) – https://www.technologyreview.com/

2️⃣ Podcasts
Include direct podcast show links or APIs where possible:

Google Cloud Platform Podcast – https://cloud.google.com/blog/topics/podcasts

Microsoft Research Podcast – https://www.microsoft.com/en-us/research/podcast/

AWS Podcast – https://aws.amazon.com/podcasts/

Meta Tech Podcast – (Some internal, but public interviews on YouTube/Spotify)

NVIDIA AI Podcast – https://blogs.nvidia.com/ai-podcast/

The Vergecast (Paid/Free Mix) – https://www.theverge.com/the-vergecast-podcast

Wired Tech in Two – https://www.wired.com/category/podcasts/

MIT Technology Review – In Machines We Trust (Paid) – https://www.technologyreview.com/podcast/

3️⃣ News
High-authority tech news feeds for Industry News section:

Google News – Technology – https://news.google.com/rss/topics/CAAqBwgKMJ6AmAswrtnkAw?oc=5

Microsoft Blog – Official News – https://blogs.microsoft.com/

Meta Newsroom – https://about.fb.com/news/

Apple Newsroom – https://www.apple.com/newsroom/

NVIDIA Newsroom – https://nvidianews.nvidia.com/news

TechCrunch – https://techcrunch.com/ (Paid for Pro)

The Verge – Tech – https://www.theverge.com/tech

Wired – Technology – https://www.wired.com/category/tech/ (Paid/Free Mix)

Bloomberg Technology (Paid) – https://www.bloomberg.com/technology

MIT Technology Review – News (Paid) – https://www.technologyreview.com/
-------------------------------------------------
Future Works for TechnicalAcumen
1️⃣ Chatroom + Chatbot Integration
Current: Layout is ready, setup is done, but there are errors stopping it from fully working.

Work to be done:

Fix the errors so messages send and receive without issues.

Make sure both chatroom and chatbot can run together without interfering.

Test sending and receiving messages from both sides.

2️⃣ SSO (Single Sign-On) Login
Current: Configuration files are already in the server, but the site is not connecting to SSO.

Work to be done:

Check all links, login addresses, and certificates are matching.

Fix any mismatch so SSO login works and takes the user into the site.

3️⃣ Search Bar
Current: Search bar design is ready but doesn’t work yet.

Work to be done:

Connect the search bar so it can find pages or content on the site.

Show suggestions when the user types.

4️⃣ Feedback Form (Backend)
Current: Feedback page is there, but messages are not stored anywhere.

Work to be done:

Save feedback submissions into a file or database.

Show a success message after feedback is sent.

5️⃣ Teams Calendar Integration
Current: Calendar page is ready, but not linked to Teams.

Work to be done:

Connect the calendar to Microsoft Teams so events can be shown or added directly from the site.
----------------------------------------------------------------
TechnicalAcumen – Detailed Project File Structure & Handover Notes
Root Directory: /var/www/html/technicalacumen
This folder now contains the entire website — frontend pages, backend scripts, stylesheets, images, and configurations.

1️⃣ Frontend – HTML Pages (User Interface)
These are the visible pages users see in their browser. If you need to change page content, you edit these files:

index.html – The homepage/landing page of TechnicalAcumen. Contains the hero section, navigation menu, and intro text.

login.html – The user login form. Connects to backend authentication scripts.

learn.html – Page listing AI/ML courses and categorized learning sections.

writeblogs.html – Blog editor page. Lets users write and publish text-based blogs.

videoblog.html – Displays technical videos/blogs fetched from YouTube or other sources.

podcast.html – Podcast listing page with embedded Spotify players.

feedback.html – Page for users to submit feedback via a form.

industrynews.html – Tech news page with RSS feed integration.

chatroom.html – Real-time chatroom/forum-style discussion page.

leaderboard.html – Shows user rankings (possibly from gamified points).

contact.html – Contains contact form and team contact info.

blog.html – Lists published blog articles.

2️⃣ CSS Files (Design & Styling)
These files control how the website looks (colors, layouts, fonts).

style.css – Main stylesheet applied across the entire site.

calender-style.css – Styles for any calendar/date picker components.

writeblogs-style.css – Styles specifically for the Write Blogs page.

leaderboard-style.css – Styles specifically for the Leaderboard page.

3️⃣ JavaScript Files (Frontend Logic)
These files handle interactivity and dynamic page updates in the browser.

script.js – Main JavaScript for general page functions (menus, animations, API calls).

calender-script.js – Code to control calendar/date selector.

writeblogs-script.js – Handles blog creation form submission, image uploads, and saving to database.

4️⃣ Backend Files (Server-Side Logic)
These files run on the server to handle data storage, processing, and API requests.

app.py – Python backend application (likely Flask). May handle blog storage, chatroom messages, or API endpoints.

config.py – Stores backend configurations like DB paths, API keys, and settings.

models.py – Python file defining database tables and structures.

server.js – Node.js backend server script, possibly handling chatroom or API requests.

server1.js – An alternate or backup Node.js server configuration.

5️⃣ Data & Database
users.db – SQLite database storing user details, blog posts, leaderboard points, etc.

__pycache__/ – Auto-generated Python compiled files (can be ignored).

6️⃣ Config & Dependency Files
package.json – Node.js project metadata & dependency list.

package-lock.json – Locked dependency versions for Node.js.

venv/ – Python virtual environment containing Python packages.

node_modules/ – Installed Node.js packages.

7️⃣ Static Assets
images/ – All images used on the website. Now hosted locally instead of GitHub.

NA_Technical_Acumen_Prod.cer – SSL certificate file for HTTPS.

NA_Technical_Acumen_Prod.zip – Backup archive containing SSL certificate and possibly private key.
